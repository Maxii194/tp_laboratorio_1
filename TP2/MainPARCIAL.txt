#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <string.h>
#include "cliente.h"
#include "aviso.h"
#include "utn.h"
#include "informar.h"
#define QTY 10
#define LEN_AVISOS 10

int main()
{
    Cliente arrayClientes[QTY];
    Aviso arrayAvisos[LEN_AVISOS];
    int menu;
    int auxiliarId;
    int validaMod;
    int validaPausa;

    cliente_init(arrayClientes,QTY);
    aviso_init(arrayAvisos,LEN_AVISOS);


   cliente_altaForzada(arrayClientes,QTY,"Pablo","Belgrano","20132135");
   cliente_altaForzada(arrayClientes,QTY,"Augusto","Capa","20102030");
   cliente_altaForzada(arrayClientes,QTY,"Belen","Alberti","20153135");
   
   aviso_altaForzada(arrayAvisos,LEN_AVISOS,"HOLA_MUNDO",64,2);
   aviso_altaForzada(arrayAvisos,LEN_AVISOS,"Standtlic",64,2);
   aviso_altaForzada(arrayAvisos,LEN_AVISOS,"Libertadores",10,0);
   aviso_altaForzada(arrayAvisos,LEN_AVISOS,"Sudamericana",22,1);
   

    do
    {
        getValidInt("\n\n1.Alta\n2.Baja\n3.Modificar\n4.Mostrar\n5.Ordenar\n6.Mostrar Debug\n7.Publicar Aviso\n8.Mostrar Avisos\n9.Pausar Aviso\n10.Reaunadar Avisos\n11.Mostrar Clientes con cantidad de Avisos\n12.Mostrar Avisos con Cuit\n13.Cliente Con Mas Avisos Activos\n14.Cliente Con Mas Avisos Pausados\n15.Cliente Con Mas Avisos\n16.Cantidad de Publicaciones de un Rubro\n17.Rubro con Mas Publicaciones\n100.Salir\n","\nNo valida\n",&menu,1,100,1);
        switch(menu)
        {
            case 1:
                cliente_alta(arrayClientes,QTY);
                break;
            case 2:
                getValidInt("ID: ","\nNumero invalido\n",&auxiliarId,0,200,2);
                //cliente_baja(arrayClientes,QTY,auxiliarId);
                cliente_baja2(arrayClientes,arrayAvisos,QTY,LEN_AVISOS,auxiliarId);
                break;
            case 3:
                validaMod = getValidInt("ID: ","\nNumero invalido\n",&auxiliarId,0,200,2);
                if(validaMod == 0){
                	cliente_modificacion(arrayClientes,QTY,auxiliarId);               	
				}
                break;
            case 4:
                cliente_mostrar(arrayClientes,QTY);
                break;
            case 5:
                cliente_ordenar(arrayClientes,QTY,0);
                break;
            case 6:
                cliente_mostrarDebug(arrayClientes,QTY);
                break;
            case 7:
                getValidInt("ID: ","\nNumero invalido\n",&auxiliarId,0,200,2);
                aviso_alta(arrayAvisos,arrayClientes,QTY,LEN_AVISOS);
                break;
            case 8:
            	//aviso_mostrar(arrayAvisos,LEN_AVISOS);
            	aviso_mostrarDebug(arrayAvisos,LEN_AVISOS);
            	break;
            case 9:
                validaPausa = getValidInt("ID: ","\nNumero invalido\n",&auxiliarId,0,200,2);
                if(validaPausa == 0){
                	aviso_pausar(arrayAvisos,arrayClientes,LEN_AVISOS,QTY,auxiliarId);
                }
                break;
            case 10:
                getValidInt("ID: ","\nNumero invalido\n",&auxiliarId,0,200,2);
                aviso_reaunadar(arrayAvisos,arrayClientes,LEN_AVISOS,QTY,auxiliarId);
                break;  
            case 11:
				cliente_mostrarConAvisos(arrayClientes,QTY,arrayAvisos,LEN_AVISOS);
				break;
			case 12:
				aviso_mostrarAvisoConCuit(arrayAvisos,LEN_AVISOS,arrayClientes);
				break;
			case 13:
				informar_clienteConMasAvisosActivos(arrayClientes,QTY,arrayAvisos,LEN_AVISOS);
				break;
			case 14:
				informar_clienteConMasAvisosPausados(arrayClientes,QTY,arrayAvisos,LEN_AVISOS);
				break;
			case 15:
				informar_clienteConMasAvisos(arrayClientes,QTY,arrayAvisos,LEN_AVISOS);
				break;
			case 16:
				informar_cantidadDePublicacionesXrubro(arrayAvisos,LEN_AVISOS);
				break;
			case 17:
				informar_rubroConMasPublicaciones(arrayAvisos,LEN_AVISOS);
				break;
        }
    }while(menu != 100);

    return 0;
}